name: cd/deploy-k8s-to-aws-eks

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: ff-tech-challenge-eks-cluster

jobs:
  deploy-production:
    name: CD - Deploy K8s to AWS EKS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Encode secrets to base64
        id: base64_encode
        run: |
          echo "::set-output name=db_order_dns::$(echo -n ${{ secrets.DB_ORDER_DSN }} | base64 -w 0)"
          echo "::set-output name=db_order_user::$(echo -n ${{ secrets.DB_ORDER_USER }} | base64 -w 0)"
          echo "::set-output name=db_order_password::$(echo -n ${{ secrets.DB_ORDER_PASSWORD }} | base64 -w 0)"
          echo "::set-output name=aws_access_key_id::$(echo -n ${{ secrets.AWS_ACCESS_KEY_ID }} | base64 -w 0)"
          echo "::set-output name=aws_secret_access_key::$(echo -n ${{ secrets.AWS_SECRET_ACCESS_KEY }} | base64 -w 0)"
          echo "::set-output name=aws_session_token::$(echo -n ${{ secrets.AWS_SESSION_TOKEN }} | base64 -w 0)"
        shell: bash

      - name: Update Kube Config
        run: |
          aws eks update-kubeconfig \
          --name ${{ env.CLUSTER_NAME }} \
          --region ${{ env.AWS_REGION }}

      - name: Set Kubernetes envs
        run: |
          envsubst < configs/customer-service-config.yaml > configs/customer-service-config.yaml
          envsubst < configs/payment-service-config.yaml > configs/payment-service-config.yaml
          envsubst < configs/kitchen-service-config.yaml > configs/kitchen-service-config.yaml
          envsubst < configs/order-service-config.yaml > configs/order-service-config.yaml
          envsubst < configs/secrets.yaml > configs/secrets.yaml
        env:
          DB_ORDER_DSN: ${{ steps.base64_encode.outputs.db_order_dns }}
          DB_ORDER_NAME: ${{ secrets.DB_ORDER_NAME }}
          DB_ORDER_USER: ${{ steps.base64_encode.outputs.db_order_user }}
          DB_ORDER_PASSWORD: ${{ steps.base64_encode.outputs.db_order_password }}
          AWS_ACCESS_KEY_ID: ${{ steps.base64_encode.outputs.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.base64_encode.outputs.aws_secret_access_key }}
          AWS_SESSION_TOKEN: ${{ steps.base64_encode.outputs.aws_session_token }}
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_SQS_ORDER_STATUS_UPDATED_URL: ${{ secrets.AWS_SQS_ORDER_STATUS_UPDATED_URL }}
          DB_KITCHEN_DSN: ${{ secrets.DB_KITCHEN_DSN }}
          AWS_SQS_PAYMENT_APPROVED_QUEUE_URL: ${{ secrets.AWS_SQS_PAYMENT_APPROVED_QUEUE_URL }}
          AWS_SQS_ORDER_STATUS_QUEUE_URL: ${{ secrets.AWS_SQS_ORDER_STATUS_QUEUE_URL }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
          DYNAMODB_ENDPOINT: ${{ secrets.DYNAMODB_ENDPOINT }}

      - name: Kube Apply
        run: |
          kubectl apply -f configs/customer-service-config.yaml
          kubectl apply -f configs/kitchen-service-config.yaml
          kubectl apply -f configs/order-service-config.yaml
          kubectl apply -f configs/payment-service-config.yaml
          kubectl apply -f configs/secrets.yaml
          kubectl apply -f configs/metrics.yaml
          kubectl apply -f services/customer-service/
          kubectl apply -f services/payment-service/
          kubectl apply -f services/kitchen-service/api/
          kubectl apply -f services/kitchen-service/worker/
          kubectl apply -f services/order-service/api/
          kubectl apply -f services/order-service/worker/
          kubectl apply -f ingress/ingress.yaml
